<?xml version="1.0"?>

<!-- ======================================================== -->
<!--              WOProject tests Ant build file              -->
<!--       Normally is called from the main build.xml.        -->
<!-- ======================================================== -->
<project name="woproject-tests" default="test" basedir=".">

    <path id="classpath-tests-run">
        <fileset dir="../${build.output.build.dir}/woproject_${build.version}/lib">
            <include name="*.jar"/>
        </fileset>

        <!-- This is important, since java.home can point to  -->
        <!-- JRE that has no compiler.                        -->
        <fileset dir="${env.JAVA_HOME}/lib">
  	        <include name="*.jar" /> 
  	    </fileset>
  	    <fileset dir="${wo.wosystemroot}/Library/Frameworks">
            <include name="JavaFoundation.framework/Resources/Java/*.jar"/>
        </fileset>
    </path>

    <!-- ============================================= -->
    <!-- ============================================= -->
    <!-- Runs and reports on tests.                    -->
    <!-- Required parameters                           -->
    <!-- test.results the results directory            -->
    <!-- test.classes the test classes directory       -->
    <!-- classpath-tests-run the classpath refid       -->
    <!-- ============================================= -->
    <target name="test"
       depends="prepare,unit-test,functional-test,unit-test-report,functional-test-report">
    </target>
    
    
    
    <!-- ============================================= -->
    <!-- Runs Unit tests.                              -->
    <!-- ============================================= -->
    <target name="unit-test" depends="prepare">
        <junit fork="yes" 
               haltonfailure="no" 
               errorProperty="test.unit.failure"
               failureProperty="test.unit.failure" 
               dir="${basedir}">
               
            <classpath refid="classpath-tests-run"/>
            <formatter type="plain" usefile="true"/>
            <batchtest todir="${test.results}/unit">
                <fileset dir="${test.classes}">
                    <include name="**/*Test.class"/>
                    <exclude name="**/*BuildTest.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    

    <target name="functional-test">
        <!-- clean-build test cases using woproject -->
        <delete dir="tests/wo/dist"/>

        <!-- delete auto-generated superclasses -->
        <delete includeEmptyDirs="true">
        	<fileset dir="tests/wo/frameworks">
        		<include name="**/auto/*.java"/>
        	</fileset>
        </delete>

        <junit fork="yes" 
               haltonfailure="no" 
               errorProperty="test.functional.failure"
               failureProperty="test.functional.failure"
               dir="${basedir}">
            
            <classpath refid="classpath-tests-run"/>
            <formatter type="plain" usefile="true"/>
            <batchtest todir="${test.results}/functional">
                <fileset dir="${test.classes}">
                    <include name="**/*BuildTest.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>


    <!-- ============================================= -->
    <!-- Reports on unit tests.                        -->
    <!-- ============================================= -->
    <target name="unit-test-report" 
            description="report on unit test results" 
            depends="unit-test" 
            if="test.unit.failure">
    </target>
    

    <!-- ============================================= -->
    <!-- Reports on functional tests.                  -->
    <!-- ============================================= -->
    <target name="functional-test-report" 
            description="report on functional test results"
            depends = "functional-test" if = "test.functional.failure">
    </target>


    <target name="prepare">
        <mkdir dir="${test.results}/unit"/>
        <mkdir dir="${test.results}/functional"/>
        
        <copy todir="tests/wo/lib">
        	<fileset dir="../${build.output.build.dir}/woproject_${build.version}/lib">
        		<include name="${lib.log4j}"/>
        		<include name="${project.name}.jar"/>
        		<include name="${lib.cayenne}"/>
        	</fileset>
        </copy>
    </target>


    <!-- ============================================= -->
    <!-- Remove temporary files.                       -->
    <!-- ============================================= -->
    <target name="clean">
        <delete dir="${test.results}"/>
        <delete>
        	<fileset dir="tests/wo/lib" includes="*.jar"/>
        </delete>
    </target>
</project>
