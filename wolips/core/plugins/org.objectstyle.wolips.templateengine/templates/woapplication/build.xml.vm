<project name="${WOLipsContext.getProjectName()}" default="build" basedir=".">

	<!-- main targets  -->
	<!-- add optional targets to depends list if needed -->
	<target name="build" depends="setProps,init.build,build.woapp,ssdd,war"/>

  <target name="compileAndBuild" depends="setProps,init.build,compile,build.woapp,ssdd,war" />

	<target name="install" depends="setProps,init.install,build.woapp,ssdd,war"/>

	<target name="clean" depends="setProps">
	  	<delete dir="dist"/>
	</target>

	<!-- property determination  -->
	<target name="setProps">
		<property file="${user.home}${file.separator}build.properties"/>
		<property file="build.properties"/>
		<property file="${user.home}${file.separator}Library${file.separator}wobuild.properties"/>
		<condition property="wo.properties.check.failed">
			<not>
    			<and>
      				<isset property="wo.wosystemroot"/>
      				<isset property="wo.wolocalroot"/>
    			</and>
    		</not>
  		</condition>
  		<fail message="Could not find ${user.home}${file.separator}Library${file.separator}wobuild.properties." if="wo.properties.check.failed"/>
		<property name="install.dir" value="${wo.wolocalroot}/Library/WebObjects/Applications"/>
	</target>

	<!-- basic initializations  -->
	<target name="init.install">
		 <tstamp/>
		<property name="dest.dir" value="${install.dir}"/>
	</target>

	<target name="init.build">
	 	<tstamp/>
		<property name="dest.dir" value="dist"/>
	</target>

	<!-- woproject tasks -->
	<target name="build.woapp" depends="setProps,init.build,compile">

	    <taskdef name="woapplication" classname="org.objectstyle.woproject.ant.WOApplication">
    	</taskdef>

		<!-- add webXML="true" in build.properties file to generate a web.xml file -->
		<woapplication name="${project.name}"  stdFrameworks="false"
											 destDir="${dest.dir}"
											 customInfoPListContent="${customInfoPListContent}"
											 principalClass="${principalClass}"
											 webXML="${webXML}"
											 webXML_CustomContent="${webXML_CustomContent}"
		    								 jvm="${jvm}"
		    								 jdb="${jdb}"
		    								 javaVersion="${javaVersion}"
		    								 jvmOptions="${jvmOptions}"
		    								 jdbOptions="${jdbOptions}"
		    								 cfbundleversion="${cfBundleVersion}"
		    								 cfbundleshortversion="${cfBundleShortVersion}"
		    								 cfbundleID="${cfBundleID}">
   			<classes dir="${classes.dir}">
      			<patternset>
  					<includesfile name="${WOLipsContext.getAntFolderName()}/classes.include.patternset"/>
					<excludesfile name="${WOLipsContext.getAntFolderName()}/classes.exclude.patternset"/>
				</patternset>
   			</classes>
   			<wsresources dir=".">
      			<patternset>
  					<includesfile name="${WOLipsContext.getAntFolderName()}/wsresources.include.patternset"/>
					<excludesfile name="${WOLipsContext.getAntFolderName()}/wsresources.exclude.patternset"/>
				</patternset>
			</wsresources>
   			<resources dir=".">
      			<patternset>
  					<includesfile name="${WOLipsContext.getAntFolderName()}/resources.include.patternset"/>
					<excludesfile name="${WOLipsContext.getAntFolderName()}/resources.exclude.patternset"/>
				</patternset>
       		</resources>
       		<!-- If deploy ssdd/war then change embed to "true" here -->
			<frameworks root="${wo.wosystemroot}" embed="false">
      			<patternset>
  					<includesfile name="${WOLipsContext.getAntFolderName()}/ant.frameworks.wo.wosystemroot"/>
				</patternset>
   			</frameworks>
       		<!-- If deploy ssdd/war then change embed to "true" here -->
   			<frameworks root="${wo.wolocalroot}" embed="false">
      			<patternset>
  					<includesfile name="${WOLipsContext.getAntFolderName()}/ant.frameworks.wo.wolocalroot"/>
				</patternset>
   			</frameworks>
       		<!-- If deploy ssdd/war then change embed to "true" here -->
			<frameworks root="${user.home}" embed="false">
      			<patternset>
  					<includesfile name="${WOLipsContext.getAntFolderName()}/ant.frameworks.user.home"/>
				</patternset>
   			</frameworks>
			<otherclasspath root="${wo.wosystemroot}">
   				<patternset>
  					<includesfile name="${WOLipsContext.getAntFolderName()}/ant.classpaths.wo.wosystemroot"/>
				</patternset>
			</otherclasspath>
			<lib dir=".">
				<include name="Add .jar's that should be copied in the woa."/>
				<exclude name="**/*.woa/**"/>
			</lib>
   		</woapplication>
	</target>

	<!-- optional targets -->

	<!-- war target-->
    <!-- To use this target remove the if="${never}" statement and create the LICENSE in your project
         and create the web.xml file with the woapplication task.-->
	<target name="war" if="${never}"  depends="ssdd">
		<war destfile="${dest.dir}/${project.name}.war" webxml="${dest.dir}/${project.name}/WEB-INF/web.xml" basedir="${dest.dir}/${project.name}">
			<lib dir="${wo.wosystemroot}/Library/Frameworks/JavaWOJSPServlet.framework/WebServerResources/Java/">
				<include name="JavaWOJSPServlet_client.jar"/>
			</lib>
		</war>
		<copy todir="/tmp/${project.name}.dst/Library/WebObjects/Applications/">
			<fileset dir="${dest.dir}">
				<include name="${project.name}.woa/**"/>
			</fileset>
		</copy>
    </target>

	<!-- ssdd target-->
    <!-- To use this target
    	1)  remove the if="${never}" statement
    	2)  change embed=true  in the woapp target above
    	3)  create the LICENSE in your project directory
    	4)  add JavaWOJSPServlet in your WOFrameworks build path
    	5)  Edit the build.properties file
    	6)     set webXML = true
    -->
    <target name="ssdd" if="${never}" depends="build.woapp">
    	<mkdir dir="${dest.dir}/${project.name}/WEB-INF/classes"/>
    	<mkdir dir="${dest.dir}/${project.name}/WEB-INF/tlds"/>
    	<copy todir="${dest.dir}/${project.name}/WEB-INF/">
            <fileset dir="${dest.dir}/${project.name}.woa/Contents/">
                <include name="web.xml"/>
            </fileset>
        </copy>
    	<copy todir="${dest.dir}/${project.name}/WEB-INF/">
            <fileset dir=".">
                <include name="LICENSE"/>
            </fileset>
        </copy>
        <copy todir="${dest.dir}/${project.name}/WEB-INF/">
            <fileset dir="${dest.dir}">
                <include name="${project.name}.woa/**"/>
            </fileset>
        </copy>
        <!-- copy the frameworks to the WEBINFROOT/Library directory -->
    	<copy todir="${dest.dir}/${project.name}/WEB-INF/">
    		<fileset dir="${dest.dir}/${project.name}.woa/Contents">
    			<include name="Library/**"/>
    		</fileset>
    	</copy>
    	<copy todir="${dest.dir}/${project.name}/WEB-INF/">
    		<fileset dir="${dest.dir}/${project.name}.woa">
    			<include name="Resources/**"/>
    		</fileset>
    	</copy>
    	<copy todir="${dest.dir}/${project.name}/WEB-INF/lib/">
    		<fileset dir="${dest.dir}/${project.name}/WEB-INF">
    			<include name="**/Resources/**/*.jar"/>
    		</fileset>
     		<mapper type="flatten"/>
    	</copy>

		<!--  Get the necessary Frameworks from the webobjects system root instead of the project wrapper -->
    	<copy todir="${dest.dir}/${project.name}/WEB-INF/lib"
    		file="${wo.wosystemroot}/Library/Frameworks/JavaWOJSPServlet.framework/WebServerResources/Java/JavaWOJSPServlet_client.jar" />

    	<copy todir="${dest.dir}/${project.name}/WEB-INF/tlds">
            <fileset dir="${wo.wosystemroot}/Library/Frameworks/JavaWOJSPServlet.framework/Resources/">
                <include name="WOtaglib_1_0.tld"/>
            </fileset>
        </copy>
        <!-- the WebObject Extensions -->
    	<copy todir="${dest.dir}/${project.name}/WEB-INF/lib">
    		<fileset dir="/Library/WebObjects/Extensions/">
    			<include name="*.jar"/>
    			<exclude name="servlet.jar"/>
    		</fileset>
     		<mapper type="flatten"/>
    	</copy>


    	<!-- fix the Macos*ClassPath.txt files  -->

     	<replaceregexp file="${dest.dir}/${project.name}/WEB-INF/${project.name}.woa/Contents/MacOS/MacOSClassPath.txt"
    		match="APPROOT/Resources/Java/${project.name.lowercase}.jar"
    		replace="APPROOT/${project.name}.woa/Contents/Resources/Java/${project.name.lowercase}.jar" byline="true" />

    	<replaceregexp file="${dest.dir}/${project.name}/WEB-INF/${project.name}.woa/Contents/MacOS/MacOSXServerClassPath.txt"
    		match="APPROOT/Resources/Java/${project.name.lowercase}.jar"
    		replace="APPROOT/${project.name}.woa/Contents/Resources/Java/${project.name.lowercase}.jar" byline="true" />

    	<!-- fix the web.xml file:  the app itself needs project.name/Contents -->

    	<replaceregexp file="${dest.dir}/${project.name}/WEB-INF/web.xml" match="WEBINFROOT/Resources/Java/${project.name.lowercase}.jar"
    		replace="WEBINFROOT/${project.name}.woa/Contents/Resources/Java/${project.name.lowercase}.jar" byline="true" />

		<!-- fix the web.xml file to remove the extra Frameworks/ directory level for the frameworks -->

    	<replaceregexp file="${dest.dir}/${project.name}/WEB-INF/web.xml" match="WEBINFROOT/Frameworks//"
    		replace="WEBINFROOT/" byline="true" />

     </target>

	<!-- copy strings files -->
	<target name="copy.strings">
   		 <copy todir="${dest.dir}/${project.name}.woa/Contents/Resources">
       			<fileset dir="." casesensitive="yes">
				<include name="*.strings"/>
        			<include name="**/*.strings"/>
    			</fileset>
         		<mapper type="flatten"/>
     		</copy>
 	</target>

  <target name = "compile" depends = "setProps,init.build" >
    <mkdir dir = "bin"/>
    <javac srcdir = "src" destdir = "bin">
      <classpath>
        <fileset dir="${wo.dir.user.home.library.frameworks}" includesfile = "woproject/ant.frameworks.user.home">
          <include name = "**/*.jar"/>
        </fileset>
        <fileset dir="${wo.wolocalroot}" includesfile = "woproject/ant.frameworks.wo.wolocalroot">
          <include name = "**/*.jar"/>
        </fileset>
        <fileset dir="${wo.wosystemroot}" includesfile = "woproject/ant.frameworks.wo.wosystemroot">
          <include name = "**/*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>
</project>